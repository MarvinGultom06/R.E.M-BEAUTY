<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="/dashboard.css">
    <link rel="icon" type="image/png" href="./assets/images/favicon.png">
</head>
<body>
    <div class="dashboard-container">
        <h1>Admin Dashboard</h1>


        <!-- User management section -->
        <div class="user-management">
            <h2>Manage Users</h2>

            <!-- Form to add a new user -->
            <form id="add-user-form">
                <input type="text" id="new-username" name="username" placeholder="Enter new user name" required>
                <input type="email" id="new-email" name="email" placeholder="Enter new user email" required>
                <button type="submit">Add User</button>
            </form>

            <form id="search-user-form">
                <input type="text" id="search-username" name="search-username" placeholder="Search by user name">
                <button type="submit">Search</button>
            </form>

            <!-- List of users with delete and edit options -->
            <h3>Existing Users</h3>
            <ul id="user-list">
            </ul>
        </div>
    </div>

    <script>
    // Functions defined here
    function addUserToList(username, email) {
        const userList = document.getElementById('user-list');
        const newUserItem = document.createElement('li');
        newUserItem.id = `user-${username}`;
        newUserItem.textContent = `${username} (${email}) `;
        newUserItem.appendChild(createDeleteButton(username));
        newUserItem.appendChild(addEditButton(username, email));
        userList.appendChild(newUserItem);
    }

    function createDeleteButton(username) {
        const deleteButton = document.createElement('button');
        deleteButton.textContent = 'Delete';
        deleteButton.onclick = function() {
            if (confirm('Are you sure you want to delete ' + username + '?')) {
                fetch(`/delete-user?username=${encodeURIComponent(username)}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const userItem = document.getElementById(`user-${username}`);
                        if (userItem) {
                            userItem.remove();
                        }
                        alert(data.message);
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to delete user: ' + error.message);
                });
            }
        };
        return deleteButton;
    }

    function addEditButton(username, email) {
        const editButton = document.createElement('button');
        editButton.textContent = 'Edit';
        editButton.onclick = function() {
            const userItem = document.getElementById(`user-${username}`);
            userItem.innerHTML = `
                <input type="text" id="edit-username-${username}" value="${username}">
                <input type="email" id="edit-email-${username}" value="${email}">
                <button onclick="submitEdit('${username}', '${email}')">Save</button>
                <button onclick="cancelEdit('${username}', '${username}', '${email}')">Cancel</button>
            `;
        };
        return editButton;
    }

    function submitEdit(oldUsername) {
        const newUsername = document.getElementById(`edit-username-${oldUsername}`).value;
        const newEmail = document.getElementById(`edit-email-${oldUsername}`).value;
    
        fetch(`/update-user`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ oldUsername, newUsername, newEmail })
        })
        .then(response => {
            console.log(response);  // Log response untuk melihat status dan headers
            if (!response.ok) throw new Error(`HTTP status ${response.status}`);
            return response.json();
        })
        .then(data => {
            if (data.success) {
                // Handle success
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to update user: ' + error.message);
        });
    }
    function cancelEdit(username, originalUsername, originalEmail) {
        const userItem = document.getElementById(`user-${username}`);
        userItem.textContent = `${originalUsername} (${originalEmail}) `;
        userItem.appendChild(createDeleteButton(originalUsername));
        userItem.appendChild(addEditButton(originalUsername, originalEmail));
    }

    document.getElementById('add-user-form').addEventListener('submit', function(event) {
        event.preventDefault();
        const username = document.getElementById('new-username').value;
        const email = document.getElementById('new-email').value;

        fetch('/add-user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ username, email })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                addUserToList(data.user.username, data.user.email);
                document.getElementById('new-username').value = '';
                document.getElementById('new-email').value = '';
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to add user: ' + error.message);
        });
    });

    document.addEventListener('DOMContentLoaded', function() {
        fetch('/get-users')
        .then(response => response.json())
        .then(users => {
            users.forEach(user => {
                addUserToList(user.username, user.email);
            });
        })
        .catch(error => console.error('Failed to load users:', error));
    });

    document.getElementById('search-user-form').addEventListener('submit', function(event) {
        event.preventDefault();
        const searchValue = document.getElementById('search-username').value.toLowerCase();
        const users = document.querySelectorAll('#user-list li');
    
        users.forEach(user => {
            const isVisible = user.textContent.toLowerCase().includes(searchValue);
            user.style.display = isVisible ? 'block' : 'none';
        });
    });
    
    
    
    </script>
    <a href="/LoginAdmin" class="back-button">Log Out</a>
    <a href="/addProduct" class="addP-button">Add Product</a>
</body>
</html>
